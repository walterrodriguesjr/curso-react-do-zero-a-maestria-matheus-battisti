SEÇÃO 1: INTRODUÇÃO 


1-introdução do curso 
-explicação do curso do conteúdo a ser utilizado 

2-apresentação do curso 
-sobre os módulos e os projetos 

3-o que é o react? 
-é uma biblioteca Javascript para aplicações front-end 
-aplicações chamadas de SPA 
-React é baseado em componentes 
-mantido pelo facebook 

4-o que é node.js?
-node.js é uma runtime do Javascript, ou seja, biblioteca para compilar furante a execução do programa 
-possibilita criar softwares em JS no lado do servidor, nos bastidores, o código JS roda em C++ 

5-o que é o npm? 
-npm é um gerenciador de pacotes do node 
-possibilita utilizar bibliotecas de terceiros 
-os módulos externos ficam em uma pasta chamada node_modules 
-a pasta node_modules deve ser descartável, ou seja, a cada instalação do projeto baixamos todos os pacotes novamente 

6-instalação do node.js no windows 
-já instalado 

7-instalação do node.js no linus
-não necessário 

8-instalação do vs code 
-já instalado

9-hello world com react 
-react precisa ser instalado na pasta que será o projeto, via npx, e posteriormente iniciado 
    npx create-react-app hello-world
    npm start

10-estrutura inicial do react 
-node_modules = onde ficam as dependências do projeto (não versionada por ser muito grande)
-public = Assets estáticos e HTML de inicialização (é o que o usuário tem acesso quando acessa)
-src = onde são de fato programados os apps, onde vão os componentes e etc...
-src/index.js = arquivo de inicialização do react 
-src/App.js = componente principal da aplicação 

11-extensão para o vs code para react 
-es7 + React/Redux/React-Native snippets (já instalado) 
-analisar os atalhos para criar uma estrutura de componente já pronta e várias outras coisas

12-configurando o Emmet para o react 
-é uma extensão nativa do vs code que ajuda a escrever HTML mais rapido, porém não vêm configurado 
    por padrão 
-acessa: File > Settings > Extensions e procurar o Emmet 
    lá vamos incluir a lunguagem: javascript - javascriptreact 
(serve para não precisar ficar fazendo o HTML todo não, e sim usar as abreviações)

13-como tirar o melhor proveito deste curso 
-sempre fazer os códigos junto 
-fazer os exercícios 

14-repositório do curso 
-https://github.com/matheusbattisti/curso_react

-tarefa 1: praticando react 
-ok

15-conclusão da seção 
-ok


SEÇÃO 2: FUNDAMENTOS DO REACT 


16-introdução da seção 
-ok 

17-criando componentes
-os componentes ficam em uma pasta criada manualmente, chamada 
    components, nome do componente.js 
-por padrão, cada componente inicia com a area de importação, 
    caso houver, onde pega dados de outro componente. No corpo, 
    é onde vai a sua funtion() que retorna a sua ação. 
    Por último, é onde vai a sua exportação, para que o template 
    seja recebido pelo App.js. 
-criado novo projeto do módulos: 
    npx create-react-app fundamentos 
-criado em src, a pasta components, e dentro o componente 
    FirstComponent.js 
    feito todo processo de configurar a funtion() em arrow function 
    e sua exportação 

18-importação de componentes 
-primeiramente o componente precisa ter seu export definido 
-geralmente são importados em App.js, lá deve ser feito a importação 
    do componente, em seguida inserido dentro de < />

19-conhecendo o JSX 
-JSX é o HTML dodo react 
-ficam no return do componente 
-pode ter apenas um elemento pai 
-JSX é javascript rodando pelo react 

20-comentários nos componentes 
-// ou /*  */

21-template expressions 
-para interpolar JS dentro do JSX, basta envolver entre chaves { }



